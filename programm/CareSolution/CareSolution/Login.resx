<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBoxShowpassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAARFJREFUWEft
        lT0KwkAQhdOLhYgeRzyDGMT8FbmDnah4HztbEbGzEbyFlfjXGt/As4kbsrorKO4HDzKT2TePhRDP8XPE
        cdwMgmAchuEG2lPyPPJ9v8GxzxBFUR+LrlBWoDPU47hdYNyFblw0wy20oBrVkh7f3VB3eMwOcrUwPsoC
        mA/ZfgI3NGCIQ5IkdbbNwdIpjWdsFYKZucwizIQtc2C4E1O5arYKweK2zEJbtsyB2UVM8QVU2CokTdMq
        A5zYMoeGGctSXp0v5T8DPExsibb6qExMRFt93j6YwwVwAawGQL3E/2DBsrQWVD5aqA7iR7NGb8WytBZU
        Plq8fTCHC+ACGAewJdrqozIxEW0d34bn3QFB9pd0ylEjQAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBoxUsername.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAg9JREFUWEft
        lstKW2EUhYNVLKgDbx34BlL7CpKJhSBO1JB7CIEGnAii7Ug0OHUggg58gIID04HoSzgRAiIEsSMtdeId
        L4Pot8NqCMYDJ+aIFbJgkXPW2Xvtffb/5098DTTw7pBIJD5Fo9H5WCy2A/+Kdj0XDAZ7FfY6iMfjEQpd
        wwcHXsKQwr0FxuOwqEI5pjAIO8VB0/SsyP2o0ryBjRbjcyuA+azkKjCh72riNJlMdkuuHxRdkHFOkiOI
        2bJYmslKqh8Y5s3URi3JERT2WyzclVQ/MLsyU74BbZIckU6nO9TAhaT68T808LZL8G8TYr4pyRHEbCvW
        u00YiUR6MD0zY5qZkVwFnv+wGIu1HMneANPyQUQTG7YcqVTqo9Gu0csHEW8/pjRvQaEk5rcq9BxvwuFw
        QuHeAvNxiv95UvA5Hns6Ab/f34zpcmURChyEQqEBW2ftjy/wsDIGLnGEf5DNy4HRigzv4DQsTYEm1hh3
        H0W6uF81DR6hz/B5r5hF2bwMmERlfIfZkGm88YjdSy+T/XFLzLDyvkKLKVq8aTUjEAi0YvDbzOE3ySVw
        Ig6g/aLgiZHrHIU+63EJNDSh3EImk2mR7B4YhGWQz2azTZJdw9af3D3zwCso2T1IXFfypKSaQe6UecCf
        ktyDpIIlM+5+STVDS2UN7EtyD5Ls/90Do2yXVDNe5ZexgQa8hc/3CPIrYllzl0KcAAAAAElFTkSuQmCC
</value>
  </data>
</root>